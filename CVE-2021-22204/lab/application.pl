#!/usr/bin/env perl
# Use: perl application.pl daemon -m production -l http://*:80

use 5.018;
use strict;
use warnings;
use Mojo::URL;
use Mojo::UserAgent;
use Mojolicious::Lite -signatures;
use Image::ExifTool qw(:Public);
use Mojo::File;
use MIME::Base64;
use UUID::Tiny ":std";

get "/" => sub ($request) {
    my $read = $request -> param("read");

    if (($read) && (length($read) <= 500)) { 
        my $decoded_read = decode_base64($read);
        my $url = Mojo::URL -> new($decoded_read);

        if ($url -> scheme()) {
            my $host = $url -> host();

            my @blocklist = (
                "localhost", "0.0.0.0", "127.0.0.1", "127.0.0.2", "169.254.169.254", "instance-data",
                "0:0:0:0:0:ffff:a9fe:a9fe", "::ffff:a9fe:a9fe", "[::]", "0000::1", "0xA9.0xFE.0xA9.0xFE",
                "0251.00376.000251.0000376", "169.254.169.254.xip.io", "www.owasp.org.1ynrnhl.xip.io",
                "1ynrnhl.xip.io", "0251.00376.000251.0000376", "customer2-app-169-254-169-254.nip.io",
                "owasp.org.169.254.169.254.nip.io", "app-169-254-169-254.nip.io", "ssrf-cloud.localdomain.pw",
                "ssrf-169.254.169.254.localdomain.pw"
            );

            foreach my $hit (@blocklist) {
                if ($host eq $hit) {
                    return ($request -> render ( 
                        text => "
                            <html>
                                <head>
                                    <title></title>
                                </head>
                                <body>
                                    You can do it better!!!
                                </body> 
                            </html>
                        "
                    )); 
                }
            }

            my $userAgent = Mojo::UserAgent -> new();
            my $getContent = $userAgent -> get($decoded_read) -> result();

            if ($getContent -> is_success()) {
                my $file = $getContent -> body();
                
                my $generate = create_uuid_as_string(UUID_V4);
                my $path = Mojo::File -> new("files/$generate");
                $path = $path -> spurt($file);

                my $exifTool     = Image::ExifTool -> new();
                my $informations = $exifTool -> ImageInfo("files/$generate");

                if ($informations) {
                    my $modifydate = $informations -> {FileModifyDate};
                    my $mimetype   = $informations -> {MIMEType};
                    my $filetype   = $informations -> {FileType};

                    return ($request -> render ( 
                        text => "
                            <html>
                                <head>
                                    <title>ExifHack</title>
                                </head>
                                <body>
                                    Modify Date: $modifydate <br/>
                                    MIME Type: $mimetype <br/>
                                    File Type: $filetype <br/>
                                </body> 
                            </html>
                        "  
                    ));
                }  
            }
        }
    }
    
    return ($request -> render (
        text => "
            <script>window.location='/?read=aHR0cHM6Ly93d3cuY3Bhbi5vcmcvbWlzYy9pbWFnZXMvY3Bhbi5wbmc='</script>
        "
    ));
};

app -> start();